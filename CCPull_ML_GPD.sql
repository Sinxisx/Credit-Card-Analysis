WITH 
ML AS (
SELECT DISTINCT 
BASE_DT, 
APPL_ID,
AGREE_ID,
GCIF_NO,
NOTE_NO,
ORG_LMT_AMT, 
CURR_LMT_AMT,
BAL CURR_OS, 
CURR_INT_RT,
CLCT_RTNG_FCL,
RESTRUCT_CD,
PASTDUE_SINCE_DT, 
PASTDUE_DAYS
FROM PDA.MASTER_LOAN
WHERE BASE_DT = '{dt}'
AND APPL_ID IN ('CP','XP')),

CECE AS (
SELECT DISTINCT GCIF_NO,
CARD_NMBR
FROM PDA.TBL_BAL_CC
WHERE BASE_DT = '{dt}'
AND (Block_Code is null
OR Block_code in(' ','C','H','P','Y','M','K','B')
OR (Block_code = 'U' and user_code2 not in ('RP','PZ','MX','KD','KE','BV','PB','PF','HT','PE','PO','PU','XU','XP','PW','SM'))
OR (Block_code in ('I','R','L','S','J','A','Q','W','N','O','G','F','D') and Curr_balance <> 0)
OR (Block_code='Z' and user_code2 not in ('RP','PZ','MX','KD','KE','BV','PB','PF','HT','PE','PO','PU','XU','XP','PW','SM') and curr_balance <> 0)
OR (block_code='E' and Curr_balance > 0)
OR (Block_Code = 'T' and Curr_balance = 0 and EXPIRE2 > '{ym}'))
),

ML_BAL AS(
SELECT DISTINCT 
AGREE_ID,
MAX(BAL) MTD_MAX_OS,
AVG(BAL) MTD_AVG_OS
FROM PDA.MASTER_LOAN
WHERE BASE_DT LIKE '20'||'{ym}'||'%'
AND APPL_ID IN ('CP','XP')
GROUP BY AGREE_ID
),

JOINED AS(
SELECT
b.BASE_DT, 
b.APPL_ID,
b.AGREE_ID,
b.GCIF_NO, 
b.ORG_LMT_AMT, 
b.CURR_LMT_AMT, 
b.CURR_OS,
d.MTD_MAX_OS,
d.MTD_AVG_OS,
b.CURR_INT_RT, 
b.CLCT_RTNG_FCL, 
b.RESTRUCT_CD, 
b.PASTDUE_SINCE_DT, 
b.PASTDUE_DAYS
FROM CECE a
INNER JOIN ML b
ON a.CARD_NMBR = b.NOTE_NO
LEFT JOIN ML_BAL d
ON b.AGREE_ID = d.AGREE_ID
),

CP AS(
SELECT
BASE_DT, 
APPL_ID,
GCIF_NO, 
COUNT(AGREE_ID) CP_NOA, 
SUM(ORG_LMT_AMT)  CP_ORG_LMT, 
SUM(CURR_LMT_AMT) CP_CURR_LMT,
SUM(CURR_OS) CP_CURR_OS,
SUM(MTD_MAX_OS) CP_MAX_OS,
SUM(MTD_AVG_OS) CP_AVG_OS,
SUM(CURR_INT_RT*CURR_OS) CP_INT_AMT,
MAX(CLCT_RTNG_FCL) CP_CLCT,
CASE 
WHEN MAX(RESTRUCT_CD) = '00001' THEN 'N'
ELSE null 
END AS CP_RESTRUCT_CD,
MAX(CASE WHEN PASTDUE_SINCE_DT = '99991231' THEN 0
ELSE (TO_DATE(BASE_DT,'YYYYMMDD')-TO_DATE(PASTDUE_SINCE_DT,'YYYYMMDD'))
END) CP_PASTDUE_DAYS_CALC,
MAX(CASE WHEN PASTDUE_SINCE_DT = '99991231' THEN '00000000'
ELSE PASTDUE_SINCE_DT
END) CP_PASTDUE_DT_MAX,
MAX(PASTDUE_DAYS) CP_PASTDUE_DAYS,
CASE WHEN MAX(PASTDUE_DAYS) = 0 THEN 'PERFORMING'
WHEN MAX(PASTDUE_DAYS) >= 1 AND MAX(PASTDUE_DAYS) < 30 THEN 'GRACE PERIOD'
WHEN MAX(PASTDUE_DAYS) >= 30 THEN 'DELINQUENT'
END AS CP_STATUS
FROM JOINED
WHERE APPL_ID='CP'
GROUP BY
BASE_DT, 
APPL_ID,
GCIF_NO,
),

XP AS(
SELECT
BASE_DT, 
APPL_ID,
GCIF_NO,
COUNT(AGREE_ID) XP_NOA, 
SUM(ORG_LMT_AMT) XP_ORG_LMT, 
SUM(CURR_LMT_AMT) XP_CURR_LMT,
SUM(CURR_OS) XP_CURR_OS,
SUM(MTD_MAX_OS) XP_MAX_OS,
SUM(MTD_AVG_OS) XP_AVG_OS,
SUM(CURR_INT_RT*CURR_OS) XP_INT_AMT,
MAX(CLCT_RTNG_FCL) XP_CLCT,
MAX(CASE WHEN PASTDUE_SINCE_DT = '99991231' THEN 0
ELSE (TO_DATE(BASE_DT,'YYYYMMDD')-TO_DATE(PASTDUE_SINCE_DT,'YYYYMMDD'))
END) XP_PASTDUE_DAYS_CALC,
MAX(CASE WHEN PASTDUE_SINCE_DT = '99991231' THEN '00000000'
ELSE PASTDUE_SINCE_DT
END) XP_PASTDUE_DT_MAX,
MAX(PASTDUE_DAYS) XP_PASTDUE_DAYS,
CASE WHEN MAX(PASTDUE_DAYS) = 0 THEN 'PERFORMING'
WHEN MAX(PASTDUE_DAYS) >= 1 AND MAX(PASTDUE_DAYS) < 30 THEN 'GRACE PERIOD'
WHEN MAX(PASTDUE_DAYS) >= 30 THEN 'DELINQUENT'
END AS XP_STATUS
FROM JOINED 
WHERE APPL_ID='XP'
GROUP BY
BASE_DT, 
APPL_ID,
GCIF_NO,
)

SELECT
c.BASE_DT,
c.APPL_ID,
c.GCIF_NO,
c.CP_NOA,
x.XP_NOA,
(NVL(c.CP_ORG_LMT,0)+NVL(x.XP_ORG_LMT,0)) ORG_LMT,
(NVL(c.CP_CURR_LMT,0)+NVL(x.XP_CURR_LMT,0)) CURR_LMT,
(NVL(c.CP_CURR_OS,0)+NVL(x.XP_CURR_OS,0)) CURR_OS,
(NVL(c.CP_MAX_OS,0)+NVL(x.XP_MAX_OS,0)) MAX_OS,
(NVL(c.CP_AVG_OS,0)+NVL(x.XP_AVG_OS,0)) AVG_OS,
CASE 
WHEN c.CP_CURR_OS=0 THEN 0
ELSE (c.CP_INT_AMT/c.CP_CURR_OS)
END AS CP_INT_RT,
CASE
WHEN x.XP_CURR_OS=0 THEN 0
ELSE (x.XP_INT_AMT/x.XP_CURR_OS) 
END AS XP_INT_RT,
GREATEST(c.CP_CLCT,x.XP_CLCT) CLCT,
c.CP_RESTRUCT_CD RESTRUCT_CD,
GREATEST(c.CP_PASTDUE_DAYS_CALC,x.XP_PASTDUE_DAYS_CALC) PASTDUE_DAYS_CALC,
GREATEST(c.CP_PASTDUE_DT_MAX,x.XP_PASTDUE_DT_MAX) PASTDUE_DT_MAX,
GREATEST(c.CP_PASTDUE_DAYS,x.XP_PASTDUE_DAYS) PASTDUE_DAYS,
c.CP_STATUS,
x.XP_STATUS
FROM CP c
LEFT JOIN XP x
ON c.BASE_DT = x.BASE_DT
AND c.GCIF_NO = x.GCIF_NO